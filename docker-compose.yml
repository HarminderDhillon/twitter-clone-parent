version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: twitter-clone-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: twitterclone
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: twitter-clone-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Uncomment if you need Elasticsearch
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
  #   container_name: twitter-clone-elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - xpack.security.enabled=false
  #   ports:
  #     - "9200:9200"
  #   volumes:
  #     - elastic-data:/usr/share/elasticsearch/data
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9200"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 5

  # Uncomment if you need RabbitMQ
  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: twitter-clone-rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq
  #   healthcheck:
  #     test: ["CMD", "rabbitmqctl", "status"]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 5

volumes:
  postgres-data:
  redis-data:
  # elastic-data:
  # rabbitmq-data: 