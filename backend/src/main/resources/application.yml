spring:
  application:
    name: twitter-clone
  profiles:
    active: dev
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/twitterclone
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false
  
  # Liquibase Migration (replaced Flyway)
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
    # Similar to Flyway's baseline-on-migrate
    database-change-log-table: DATABASECHANGELOG
    database-change-log-lock-table: DATABASECHANGELOGLOCK
  
  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
    elasticsearch:
      repositories:
        enabled: true
  
  # RabbitMQ Configuration
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  
  # JWT Configuration
  jwt:
    secret: ${JWT_SECRET:defaultsecretkeythatshouldbereplacedinproduction}
    expiration: 86400000  # 24 hours in milliseconds
    refresh-expiration: 604800000  # 7 days in milliseconds
  
  # File Storage Configuration
  storage:
    type: local  # Can be 's3' for production
    local:
      upload-dir: uploads
    s3:
      bucket-name: twitter-clone-files
      region: us-east-1
  
  # WebSocket Configuration
  websocket:
    allowed-origins: "*"
    endpoint: /ws
    user-destination-prefix: /user
    application-destination-prefix: /app
    broker-prefix: /topic
  
  # Security Configuration
  security:
    cors:
      allowed-origins: "*"
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: "*"
      allow-credentials: true

# Server Configuration
server:
  port: 8081
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain,text/css,application/javascript
    min-response-size: 1024

# Logging Configuration
logging:
  level:
    root: INFO
    com.dhillon.twitterclone: DEBUG
    org.springframework.web: INFO
    org.hibernate: INFO

# Springdoc OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

# Application Custom Properties
app:
  post:
    max-length: 280
    max-media-count: 4
  user:
    default-profile-image: "/default/profile.png"
    default-header-image: "/default/header.png"
  pagination:
    default-page-size: 20
    max-page-size: 100
  cache:
    ttl:
      timeline: 300  # 5 minutes in seconds
      user-profile: 3600  # 1 hour in seconds
      post: 1800  # 30 minutes in seconds

---
# Development Environment
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  liquibase:
    enabled: false

---
# Test Environment
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:tc:postgresql:14:///twitterclone_test
  jpa:
    hibernate:
      ddl-auto: create-drop
  liquibase:
    enabled: false
  redis:
    embedded: true

---
# Production Environment
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  storage:
    type: s3

server:
  port: ${PORT:8081}

logging:
  level:
    root: ERROR
    com.dhillon.twitterclone: INFO 